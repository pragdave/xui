#!/usr/bin/env ruby
require 'YAML'

PROFILE_PATH = "util/profiles"

# TODO: print out build command line if no args provided.


def show_usage
  STDERR.puts "\nusage: ./build [ profile=<name> ] [ --minify ]"
  STDERR.puts "\nsupported profiles are:"
  Dir.chdir(PROFILE_PATH) do
    STDERR.puts Dir['*.js'].map {|profile| "\t#{profile.sub(/\.js/, '')}"}
  end
  STDERR.puts "\nIf no profile is selected, 'core' will be used\n\n"
  exit(1)
end 

# defaults
profile = "core"
minify = false

ARGV.each do |arg|
  case arg
  when "--minify" then minify = true
  when /^profile=(.*)$/ then profile = $1
  else 
      STDERR.puts("Invalid parameter '#{arg}'") unless arg == "--help"
      show_usage
  end
end
hash = YAML.load_file(File.join(profile_path, profile) + ".js")

# clear previous file
target = hash["out"]
target_dir = File.dirname(target)

Dir.mkdir(target_dir) unless File.directory?(target_dir)
File.unlink(target) if File.exist?(target)

content = hash["include"].map {|library| File.read(library + ".js") }

File.open(target, "w") {|op| op.puts content }

if minify
  puts "Minify-ing..."
  `java -jar util/compiler.jar --js=#{ hash["out"] } \
  --js_output_file=#{ hash["out"] }.min`
end
